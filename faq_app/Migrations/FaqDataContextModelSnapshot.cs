// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using faq_app.Models;

namespace faq_app.Migrations
{
    [DbContext(typeof(FaqDataContext))]
    partial class FaqDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("faq_app.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = "A",
                            CategoryName = "General"
                        },
                        new
                        {
                            CategoryId = "B",
                            CategoryName = "History"
                        });
                });

            modelBuilder.Entity("faq_app.Models.Faq", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TopicId");

                    b.ToTable("Faqs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Answer = "C# is a programming language developed by Microsoft. It is widely used for developing desktop, web, and mobile applications.",
                            CategoryId = "A",
                            Question = "What is C#?",
                            TopicId = "A"
                        },
                        new
                        {
                            Id = 2L,
                            Answer = "JavaScript is a programming language commonly used for web development. It allows for interactive elements and dynamic content on websites.",
                            CategoryId = "A",
                            Question = "What is JavaScript?",
                            TopicId = "B"
                        },
                        new
                        {
                            Id = 3L,
                            Answer = "Bootstrap is a popular front-end framework for building responsive and mobile-first websites. It provides pre-designed components and styles to streamline development.",
                            CategoryId = "A",
                            Question = "What is Bootstrap?",
                            TopicId = "C"
                        },
                        new
                        {
                            Id = 4L,
                            Answer = "C# was first released in 2000 as part of the .NET Framework.",
                            CategoryId = "B",
                            Question = "When was C# first released?",
                            TopicId = "A"
                        },
                        new
                        {
                            Id = 5L,
                            Answer = "The basic data types in JavaScript are number, string, boolean, null, undefined, and symbol.",
                            CategoryId = "A",
                            Question = "What are the basic data types in JavaScript?",
                            TopicId = "B"
                        },
                        new
                        {
                            Id = 6L,
                            Answer = "In Bootstrap, containers are used to wrap and contain page content. They provide padding and ensure proper alignment of content within the viewport.",
                            CategoryId = "A",
                            Question = "What is the purpose of a container in Bootstrap?",
                            TopicId = "C"
                        },
                        new
                        {
                            Id = 7L,
                            Answer = "A lambda expression is an anonymous function that can contain expressions and statements. It is commonly used to create delegates or expression tree types.",
                            CategoryId = "A",
                            Question = "What is a lambda expression in C#?",
                            TopicId = "A"
                        },
                        new
                        {
                            Id = 8L,
                            Answer = "The let keyword allows you to declare variables with block scope, while var declares variables with function scope.",
                            CategoryId = "A",
                            Question = "What is the difference between let and var in JavaScript?",
                            TopicId = "B"
                        },
                        new
                        {
                            Id = 9L,
                            Answer = "The grid system in Bootstrap is a responsive layout system that allows you to create grid-based layouts for your web pages. It is based on a 12-column grid and supports multiple device sizes.",
                            CategoryId = "A",
                            Question = "What is the grid system in Bootstrap?",
                            TopicId = "C"
                        },
                        new
                        {
                            Id = 10L,
                            Answer = "An interface in C# defines a contract that specifies a set of members (methods, properties, events) that implementing classes must provide. It enables polymorphism and helps achieve loose coupling.",
                            CategoryId = "A",
                            Question = "What is an interface in C#?",
                            TopicId = "A"
                        });
                });

            modelBuilder.Entity("faq_app.Models.Topic", b =>
                {
                    b.Property<string>("TopicId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TopicName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicId");

                    b.ToTable("Topic");

                    b.HasData(
                        new
                        {
                            TopicId = "A",
                            TopicName = "C#"
                        },
                        new
                        {
                            TopicId = "B",
                            TopicName = "JavaScript"
                        },
                        new
                        {
                            TopicId = "C",
                            TopicName = "Bootstrap"
                        });
                });

            modelBuilder.Entity("faq_app.Models.Faq", b =>
                {
                    b.HasOne("faq_app.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("faq_app.Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId");
                });
#pragma warning restore 612, 618
        }
    }
}
